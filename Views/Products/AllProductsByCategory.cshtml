@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager

@{
    ViewData["Title"] = "Products";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@using Microsoft.AspNetCore.Identity
@model ICollection<ClearSoundCompany.Data.Models.Products.Product>

<section>
    <div class="container main-container" data-aos="fade-up">

        <div class="section-title" align="center">
            <p style="color: white"><span style="color: red">@Model.FirstOrDefault()?.Category.Name</span> Products</p>
        </div>

        <div class="row" style="color: white">
            @foreach (var product in Model)
            {
                <div class="col-lg-3 col-md-4 d-flex align-items-stretch" data-aos="zoom-in" data-aos-delay="25">
                    <div class="icon-box">
                        <a asp-area="" asp-controller="Products" asp-action="ProductInformation" asp-route-id="@product.Id">
                            <img src="/database_files/Products/@product.ProfileImage" alt="" />
                        </a>
                        <h4>
                            <a asp-area="" asp-controller="Products" asp-action="ProductInformation" asp-route-id="@product.Id">@product.Name</a>
                        </h4>
                        @if (_signInManager.IsSignedIn(User) && !User.IsInRole("Administrator"))
                        {
                            <input class="btn get-started-cart-btn" id="submit-id-submit" type="button" value="Add" onclick="addProduct('@product.Id')" />
                        }
                        @if (User.IsInRole("Administrator"))
                        {
                            <p style="font-weight: bold; color: red">Id: @product.Id</p>
                            <form method="post" asp-area="Administration" asp-controller="Products" asp-action="DeleteProduct" asp-route-id="@product.Id" id="@product.Id">
                            </form>
                            <a class="btn btn-primary" asp-area="Administration" asp-controller="Products" asp-action="EditProduct" asp-route-id="@product.Id">Edit</a>
                            <button type="button"  class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-whatever="@product.Id">
                                Delete
                            </button>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    @if (User.IsInRole("Administrator"))
    {

        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered ">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Delete this product?</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this Product? It will be lost forever!
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                        <button type="button" id="delete-product-button" class="btn btn-danger">Yes, DELETE this product!</button>
                    </div>
                </div>
            </div>
        </div>
    }
</section>


@section scripts{
    <script type="text/javascript">

        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal',
            function(event) {
                // Button that triggered the modal
                var button = event.relatedTarget;
                // Extract info from data-bs-* attributes
                var idProduct = button.getAttribute('data-bs-whatever');

                // Update the modal's content.
                var modalTitle = deleteModal.querySelector('.modal-title');

                modalTitle.textContent = `Delete this product (id): ${idProduct}`;

                document.getElementById('delete-product-button').addEventListener('click',
                    () => {
                        document.getElementById(idProduct).submit();
                    });

            });
    </script>
}